string[] wallet = new string[] {"Coq Inu","Ethereum","Pepe","Kusama"};
string walletOwner = "Sijan Acharya";
Console.Write($"{walletOwner} has the following coins: {string.Join(", ",wallet)}");

// Length is a property of a string which returns number of characters in that string
string game = "Call Of Duty";
Console.WriteLine($"{game} has {game.Length} letters in the word");

string accountOwner = "Sijan Acharya";
string bank = "St.George";
double bankBalance = 5.10;
Console.Write($"{accountOwner} has ${bankBalance} in their {bank} account");

// TrimStart() method
// Square brackets are used to help visualize the spaces in Trim method
string name = "        Minecraft       ";
string trimmedNameFront = name.TrimStart();
Console.WriteLine($"[{trimmedNameFront}]"); // [Minecraft       ]

// TrimEnd() method
string sport = "        Boxing      ";
string trimmedNameBack = sport.TrimEnd();
Console.WriteLine($"[{trimmedNameBack}]"); // [        Boxing]

// Trim() method
string company = "      Blackrock       ";
string companyTrimmed = company.Trim();
Console.WriteLine($"[{companyTrimmed}]"); // [Blackrock]

// Replace method
string name = "Lamar Jackson";
Console.WriteLine($"Current name is {name}");
name = name.Replace("Jackson","Taylor");
Console.WriteLine($"Current name is {name}");

// Upper case method
string saveCapitalName = name.ToUpper();
Console.WriteLine(saveCapitalName);

// Lower case method
string saveLowerCaseName = name.ToLower();
Console.WriteLine(saveLowerCaseName);

// Contains method
// Returns true if substring is 
string theZoneLyrics = "I don't want to die tonight babe. So let me sip this slow";
Console.WriteLine(theZoneLyrics.Contains("touch you right")); // False
Console.WriteLine(theZoneLyrics.Contains("let me")); // True

string lyrics = "All alone she was living in a world without an end or beginning";
string substring = "in a world";
Console.WriteLine(lyrics.Contains(substring));

string futureSong = "Tony Montana, Tony Montana, Tony Montana";
string searchString = "Tony Montana";
Console.WriteLine(futureSong.Contains(searchString));

if (futureSong.Contains(searchString)) {
    Console.WriteLine($"{searchString} is inside {futureSong}");
} else {
    Console.WriteLine($"{searchString} is NOT inside {futureSong}");
}

// StartsWith() method
// Returns true if the substring starts at the beggining of the variable
string starboy = "I'm trying to put you in the worst mood. P1 cleaner than your church shoes";

Console.WriteLine(starboy.StartsWith("I'm"));
// EndsWith() method
// Return true if the substrings is at the end of the variable
Console.WriteLine(starboy.EndsWith("shoes"));

// Challenge
string songLyrics = "You say goodbye, and I say hello";
Console.WriteLine(songLyrics.StartsWith("You")); // Correct
Console.WriteLine(songLyrics.StartsWith("goodbye")); // Correct
Console.WriteLine(songLyrics.EndsWith("hello")); // Correct
Console.WriteLine(songLyrics.EndsWith("goodbye")); // Correct
